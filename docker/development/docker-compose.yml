version: '3.8'

services:
  postgres:
    image: postgres:9.6-alpine
    ports:
      - "5433"
    volumes:
      - app_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    restart: always
  app:
    build:
      context: ./../../
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: development
    image: rails_react:latest
    ports:
      - "3000:3000"
    entrypoint: ["/docker-entrypoint.sh"]
    command: bundle exec rails s -b 0.0.0.0 -p 3000
    volumes:
      - ./../../:/opt/app
      - app_rvm_gems:/vendor/bundle
      - app_node_modules:/opt/app/node_modules
      - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
    environment:
      - BOOTSNAP_DISABLED=true
      - WEBPACKER_DEV_SERVER_HOST=webpacker
      - SSH_AUTH_SOCK
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - NODE_ENV=development
      - RAILS_ENV=development
    depends_on:
      - postgres
      - webpacker
    links:
      - postgres:db
    stdin_open: true
    tty: true
    restart: always
  webpacker:
    build:
      context: ./../../
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: development
    image: rails_react:latest
    command: bash -c "rm -rf public/packs/* || true && rm -rf tmp/cache/* && bin/webpack-dev-server"
    ports:
      - '3035:3035'
    volumes:
      - ./../../:/opt/app
      - app_rvm_gems:/vendor/bundle
      - app_node_modules:/opt/app/node_modules
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
      - BOOTSNAP_DISABLED=true
volumes:
  app_db:
  app_rvm_gems:
  app_node_modules:
